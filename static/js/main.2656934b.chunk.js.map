{"version":3,"sources":["logo.svg","components/Header.js","Pages/Layout.js","components/ItemPlanet.js","Pages/ListPlanets.js","components/ItemPeople.js","Pages/ListPeople.js","components/CardButton.js","Pages/Home.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","Layout","props","Fragment","children","ItemPlanet","this","planet","name","climate","terrain","population","Component","ListPlanets","fetchData","a","setState","loading","error","fetch","URL","options","response","json","data","state","undefined","Accept","console","log","results","map","people","height","birth_year","gender","ListPeople","Card","to","path","title","Home","App","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2656934b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport './styles/Header.css'\n\nexport default function Header() {\n    return (\n        <header>\n            <nav>\n                <div className=\"logo\">\n                    Star Wars <sup>Planets or People!</sup>\n                </div>\n            </nav>\n        </header>\n    )\n}\n","import React, { Component } from 'react'\nimport Header from '../components/Header'\n\n\nexport default function Layout(props) {\n    return (\n        <React.Fragment>\n            <Header/>\n            {props.children}\n        </React.Fragment>\n    )\n}\n","import React, { Component } from 'react'\nimport './styles/ItemPlanet.css'\n\nexport default class ItemPlanet extends Component {\n\n    constructor(props){\n        super(props)\n    }\n\n    render() {\n        return (\n            <li className=\"item\"> \n                <h2>{ this.props.planet.name }</h2>\n                <p>Climate: {this.props.planet.climate }</p>\n                <p>Terrain: {this.props.planet.terrain }</p>\n                <p>Population: {this.props.planet.population }</p>\n            </li>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './styles/ListPlanets.css'\nimport ItemPlanet from '../components/ItemPlanet'\n\nexport default class ListPlanets extends Component {\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            loading: true,\n            error: null,\n            data: undefined\n        }\n        this.URL = 'https://swapi.dev/api/';\n        this.options = {\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n        };\n    }\n\n    componentDidMount(){\n        this.fetchData();\n    }\n\n    fetchData = async () =>{\n        this.setState({loading: true, error: null})\n\n        try {\n            const response = await fetch(`${this.URL}planets/`, this.options);\n            const data = await response.json();\n            this.setState({loading: false, data: data})\n            \n        } catch (error) {\n            this.setState({loading: false, error: error})\n        }\n        \n    }\n    \n    render() {\n        if(this.state.loading === true && !this.state.data){\n            return <h2>Loading...</h2>\n        }\n\n        if(this.state.error){\n            return <h2>Not found</h2>\n        }\n\n        console.log(this.state.data);\n        return (\n            <React.Fragment>\n                <div className=\"container-general\">\n                    {this.state.data.results.map(planet => {\n                        return (\n                            <ItemPlanet planet={planet}/>\n                        )\n                    })}\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './styles/ItemPlanet.css'\n\nexport default class ItemPlanet extends Component {\n\n    constructor(props){\n        super(props)\n    }\n\n    render() {\n        return (\n            <li className=\"item\"> \n                <h2>{ this.props.people.name }</h2>\n                <p>Height: {this.props.people.height }</p>\n                <p>Birth Year: {this.props.people.birth_year }</p>\n                <p>Gender: {this.props.people.gender }</p>\n            </li>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './styles/ListPeople.css'\nimport ItemPeople from '../components/ItemPeople'\n\nexport default class ListPeople extends Component {\n\n        \n    constructor(props){\n        super(props);\n        this.state = {\n            loading: true,\n            error: null,\n            data: undefined\n        }\n        this.URL = 'https://swapi.dev/api/';\n        this.options = {\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n        };\n    }\n\n    componentDidMount(){\n        this.fetchData();\n    }\n\n    fetchData = async () =>{\n        this.setState({loading: true, error: null})\n\n        try {\n            const response = await fetch(`${this.URL}people/`, this.options);\n            const data = await response.json();\n            this.setState({loading: false, data: data})\n            \n        } catch (error) {\n            this.setState({loading: false, error: error})\n        }\n        \n    }\n\n    render() {\n\n        if(this.state.loading === true && !this.state.data){\n            return <h2>Loading...</h2>\n        }\n\n        if(this.state.error){\n            return <h2>Not found</h2>\n        }\n\n        return (\n            <React.Fragment>\n                <div className=\"container-general\">\n                    {this.state.data.results.map(people => {\n                        return (\n                            <ItemPeople people={people}/>\n                        )\n                    })}\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './styles/CardButton.css'\n\nexport default function Card(props) {\n    return (\n        <Link className=\"link card\" to={`/${props.path}`}>\n            <div className=\"\">\n                    <p className=\"title-card\"> { props.title } </p>\n            </div>\n        </Link>\n    )\n}\n","import React, { Component } from 'react'\nimport './styles/Home.css'\nimport CardButton from '../components/CardButton'\n\nexport default class Home extends Component {\n    render() {\n        return (\n            <div className=\"container-home\">\n                <p className=\"title-h3\">What do you want to know?</p>\n\n                <div className=\"container-buttons\">\n                    <CardButton path=\"planets\" title=\"Planets\"/>\n                    <CardButton path=\"people\" title=\"People\"/>\n\n                </div>\n            </div>\n        )\n    }\n}\n","import logo from '../logo.svg';\nimport './styles/App.css';\nimport { BrowserRouter, Switch, Route} from 'react-router-dom'\nimport Layout from '../Pages/Layout'\nimport ListPlanets from '../Pages/ListPlanets'\nimport ListPeople from '../Pages/ListPeople'\nimport Home from '../Pages/Home'\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Layout>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/planets\" component={ListPlanets} />\n          <Route exact path=\"/people\" component={ListPeople} />\n        </Switch>\n      </Layout>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}